import osimport wfdbimport matplotlib.pyplot as pltwfdb.show_ann_classes()wfdb.show_ann_labels()# read a record of ECG data with ahead 10000 signal points# file_Path = '/Users/collcertaye/WorkSpace/Laboratory_FECG/MIT:BIH_database/mit-bih-arrhythmia-database-1.0.0'# file_Name = '100'file_Path = '/Users/collcertaye/WorkSpace/Lab-FECG/FECG_2013DB/set-a'file_Name = 'a03'# sampto: length of signal; physical: d_signal or p_signal;record = wfdb.rdrecord(os.path.join(file_Path, file_Name), sampfrom=0, sampto=1000,                       physical=True, channels=[0, 1, 2, 3])print("record frequency: " + str(record.fs))print("record channel_name: " + str(record.n_sig) + str(record.sig_name))signal_lead = record.p_signalprint(signal_lead.shape)ventricular_signal = record.p_signal[0:1000]print('signal shape: ' + str(ventricular_signal.shape))# read a record of ECG annotation with ahead 1000 signal pointssignal_annotation = wfdb.rdann(os.path.join(file_Path, file_Name), "atr", sampfrom=0, sampto=800)# print annotation details# chan: the channel to which the current annotation belongsprint("chan: " + str(signal_annotation.chan))# sample: the location of R wave in each beatprint("sample: " + str(signal_annotation.sample))# symbol: the type of each beatprint("symbol: " + str(signal_annotation.symbol))# draw index of annatations onto the diagramplt.figure()plt.subplot()plt.plot(ventricular_signal[:, 0])for index in signal_annotation.sample:    print(index)    plt.scatter(x=index, y=ventricular_signal[index, 0], marker="*")# plt.subplot(222)# plt.plot(ventricular_signal[:, 1])# for index in signal_annotation.sample:#     print(index)#     plt.scatter(x=index, y=ventricular_signal[index, 1], marker="*")# plt.subplot(223)# plt.plot(ventricular_signal[:, 2])# for index in signal_annotation.sample:#     print(index)#     plt.scatter(x=index, y=ventricular_signal[index, 2], marker="*")# plt.subplot(224)# plt.plot(ventricular_signal[:, 3])# for index in signal_annotation.sample:#     print(index)#     plt.scatter(x=index, y=ventricular_signal[index, 3], marker="*")plt.show()