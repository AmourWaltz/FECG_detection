import osimport sysimport wfdb# import FECG_detectiveimport matplotlib.pyplot as plt# read a record of ECG data with ahead amount signal pointsfile_Path = '/Users/collcertaye/WorkSpace/Laboratory_FECG/FECGSYNDB/sub01/snr00'file_FECG = 'sub01_snr00dB_l1_c0_fecg1'file_MECG = 'sub01_snr00dB_l1_c0_mecg'file_Noise1 = 'sub01_snr00dB_l1_c0_noise1'file_Noise2 = 'sub01_snr00dB_l1_c0_noise2'sample_Start = 0sample_End = 500def signal_interception(file_name):    if file_name[-6:] == 'noise1' or file_name[-6:] == 'noise2':        record = wfdb.rdrecord(os.path.join(file_Path, file_name), sampfrom=0, physical=True, channels=[0, ])        signal_record = record.p_signal[sample_Start:500]        print(len(signal_record))        annotation_id = None        pass    elif file_name[-6:] == '_fecg1' or file_name[-6:] == '0_mecg':        record = wfdb.rdrecord(os.path.join(file_Path, file_name), sampfrom=0, physical=True, channels=[0, ])        signal_annotation = wfdb.rdann(os.path.join(file_Path, file_name), "atr",                                       sampfrom=sample_Start, sampto=500)        signal_record = record.p_signal[sample_Start:500]        annotation_id = signal_annotation.sample        pass    else:        print('error !')        sys.exit()    return signal_record, annotation_iddef signal_synthesis():    fecg_signal, fecg_annotation = signal_interception(file_FECG)    mecg_signal, mecg_annotation = signal_interception(file_MECG)    noise1_signal, _ = signal_interception(file_Noise1)    noise2_signal, _ = signal_interception(file_Noise2)    # signal_record = fecg_signal + mecg_signal + noise2_signal    # draw index of annatations onto the diagram    plt.plot(8 * fecg_signal + mecg_signal)    # plt.plot(mecg_signal)    plt.title("ventricular signal")    for index in fecg_annotation:        print(index)        plt.scatter(x=index, y=fecg_signal[index], marker="*")        pass    plt.show()signal_synthesis()